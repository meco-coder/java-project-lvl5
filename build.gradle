plugins {
	id 'checkstyle'
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'application'
	id 'org.liquibase.gradle' version '2.0.4'

}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'



application {
	mainClass = 'hexlet.code.AppApplication'
}



repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly (
			'com.h2database:h2:1.4.200',
			'org.postgresql:postgresql:42.2.24'
	)

	liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime sourceSets.main.output

}

tasks.named('test') {
	useJUnitPlatform()
}

diffChangeLog {
	dependsOn compileJava
}

liquibase {
	activities {
		main {
			// Указываем путь, по которому будет сгенерирован файл миграции
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			// Указывем источник, с которым будут сравниваться изменния
			// Это база данных, изначально она пустая
			url 'jdbc:h2:./hexlet'
			// Имя пользователя и пароль для подключения к базе
			username 'sa'
			password 'sa'
			// Указывем, откуда мы будем брать изменения
			// Это модели
			// Указываем пакет, в котором расположены модели
			referenceUrl 'hibernate:spring:hexlet.code.model' +
					// Указываем диалект
					'?dialect=org.hibernate.dialect.H2Dialect' +
					// Указываем правила именования таблиц и столбцов,
					// чтобы они соответствовали правилам Spring
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}


task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean
